<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
<title>Ancient Greek Keyboard (Transliteration)</title>
<link rel="icon" href="../assets/favicon.svg">
<link rel="stylesheet" href="../assets/theme.css">
<link rel="stylesheet" href="../assets/styles.css">
        <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-2381000819704004"
          crossorigin="anonymous"></script>
</head>
<body>
<div class="container">
  <header class="site"><a class="brand" href="../index.html">← Utility Tools</a></header>

  <h1 style="font-size:var(--h2-size);margin:6px 0 10px">Ancient Greek Keyboard (Transliteration)</h1>
  <p class="small">Type Romanized Ancient Greek (e.g., "paida" → "παῖδα") for real-time output. Uses Beta Code scheme (e.g., a=α, ai=αι, ph=φ). Copy the result.</p>

  <div class="section">
    <label for="input">Romanized Input</label>
    <textarea id="input" rows="6" placeholder="e.g., paida, theos → παῖδα, θεός (real-time)"></textarea>
    <div class="stack" style="margin-top:10px">
      <button class="secondary" id="copy" style="display:none">Copy Output</button>
      <button class="secondary" id="clear">Clear</button>
    </div>
  </div>

  <div class="section">
    <label>Greek Output</label>
    <div id="output" class="out" style="min-height:100px;white-space:pre-wrap;font-family:monospace"></div>
    <p class="small">Beta Code reference: Vowels: a=α, e=ε, ē=η, i=ι, o=ο, ō=ω; Diphthongs: ai=αι, au=αυ, ei=ει, eu=ευ, oi=οι, ou=ου; Consonants: b=β, g=γ, d=δ, z=ζ, th=θ, k=κ, l=λ, m=μ, n=ν, x=ξ, p=π, r=ρ, s=σ/ς, t=τ, ph=φ, ch=χ, ps=ψ; Accents: '=acute, `=grave, ~=circumflex; Breathings: h=aspirate.</p>
  </div>

  <footer class="site"><a href="../index.html">← Back to tools</a></footer>
</div>

<script>
const input = document.getElementById('input');
const output = document.getElementById('output');
const copyBtn = document.getElementById('copy');
const clearBtn = document.getElementById('clear');

// Beta Code transliteration (basic: diphthongs first, then singles; case-insensitive, rough for accents/breathings)
const transliterate = (text) => {
  const lower = text.toLowerCase();
  let result = lower
    // Diphthongs
    .replace(/ai/g, 'αι').replace(/au/g, 'αυ').replace(/ei/g, 'ει').replace(/eu/g, 'ευ').replace(/oi/g, 'οι').replace(/ou/g, 'ου')
    // Vowels
    .replace(/a/g, 'α').replace(/e/g, 'ε').replace(/ē/g, 'η').replace(/i/g, 'ι').replace(/o/g, 'ο').replace(/ō/g, 'ω')
    // Consonants
    .replace(/b/g, 'β').replace(/g/g, 'γ').replace(/d/g, 'δ').replace(/z/g, 'ζ').replace(/th/g, 'θ').replace(/k/g, 'κ').replace(/l/g, 'λ')
    .replace(/m/g, 'μ').replace(/n/g, 'ν').replace(/x/g, 'ξ').replace(/p/g, 'π').replace(/r/g, 'ρ').replace(/s/g, 'σ').replace(/t/g, 'τ')
    .replace(/ph/g, 'φ').replace(/ch/g, 'χ').replace(/ps/g, 'ψ')
    // Rough accents/breathings (e.g., '=acute, h=aspirate)
    .replace(/'/g, '́').replace(/`/g, '̀').replace(/~/g, '^').replace(/h/g, '῾') // Simple placeholders
    // Uppercase restore (first letter)
    .replace(/^(.)/, c => c.toUpperCase());
  return result;
};

// Real-time input listener
input.addEventListener('input', updateOutput);

function updateOutput() {
  output.textContent = transliterate(input.value); // Real-time full transliteration
  copyBtn.style.display = input.value.trim() ? 'inline-block' : 'none';
}

function copyOutput() {
  navigator.clipboard.writeText(output.textContent).then(() => alert('Copied!'));
}

clearBtn.onclick = () => {
  input.value = '';
  output.textContent = '';
  copyBtn.style.display = 'none';
};

copyBtn.onclick = copyOutput;

// Init
updateOutput();
</script>
</body>
</html>
